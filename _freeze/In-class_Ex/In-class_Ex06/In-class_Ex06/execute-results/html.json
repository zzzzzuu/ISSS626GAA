{
  "hash": "14ff3a5dd637862f412c35c491684b52",
  "result": {
    "markdown": "---\ntitle: \"In-class Exercise 06\"\nauthor: \"Leow Xian Zu\"\ndate: \"30 Sep 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true \n  message: false #no more warning message\n  freeze: true #whatever document already commited does not render\n---\n\n\n# Emerging Hot Spot Analysis\n\n# Set up\n\n## Load packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tmap,       # for thematic mapping\n               sf,         # spatial data handling\n               sfdep,      # spatial dependence analysis\n               plotly,     # interactive plotting\n               tidyverse,\n               Kendall\n               )  # data manipulation & viz\nset.seed(1234)\n```\n:::\n\n\n## Read data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan <- st_read(dsn = \"data/geospatial\", \n                 layer = \"Hunan\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `Hunan' from data source \n  `C:\\zzzzzuu\\ISSS626GAA\\In-class_Ex\\In-class_Ex06\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n```\n:::\n\n```{.r .cell-code}\nGDPPC <- read_csv(\"data/aspatial/Hunan_GDPPC.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 1496 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): County\ndbl (2): Year, GDPPC\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nhunan2012 <- read_csv(\"data/aspatial/Hunan_2012.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 88 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, City\ndbl (27): avg_wage, deposite, FAI, Gov_Rev, Gov_Exp, GDP, GDPPC, GIO, Loan, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\nhunangdp <- read_excel(\"data/aspatial/Hunan_GDP.xlsx\")\n```\n:::\n\n\nLet's examine GDPPC.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(GDPPC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Year         County              GDPPC       \n Min.   :2005   Length:1496        Min.   :  3315  \n 1st Qu.:2009   Class :character   1st Qu.: 11895  \n Median :2013   Mode  :character   Median : 20941  \n Mean   :2013                      Mean   : 26705  \n 3rd Qu.:2017                      3rd Qu.: 34163  \n Max.   :2021                      Max.   :155564  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nGDPPC_st <- spacetime(GDPPC,                   # Attribute data\n                      hunan,                   # Spatial data\n                      .loc_col = \"County\",     # specifying location\n                      .time_col = \"Year\"       # Specifying time, expecting integer\n                      )\nis_spacetime_cube(GDPPC_st)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\nCheck out the documentation for the spacetime cube function.\n\nhttps://sfdep.josiahparry.com/articles/spacetime-s3.html\n\nThere are several spacetime objects. Under sfdep, it is a tidyverse object. It cannot handle dynamic position (e.g. trajectories or flows). Boundaries change.\n\nThis code creates a spacetime cube object, combining spatial (hunan) and temporal (GDPPC) data. It's organizing the GDP per capita data by county and year.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGDPPC_nb <- GDPPC_st %>%\n  activate(\"geometry\") %>%                #Activate is used to activate the geometry context\n  mutate(nb = include_self(               #Mutate used to create new nb and wt\n    st_contiguity(geometry)),\n    wt = st_inverse_distance(nb,\n                             geometry,\n                             scale = 1,\n                             alpha = 1),\n    .before = 1) %>%\n  set_nbs(\"nb\") %>%                         #Avoid itchy hand to sort\n  set_wts(\"wt\")                             \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n! Polygon provided. Using point on surface.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There was 1 warning in `stopifnot()`.\nℹ In argument: `wt = st_inverse_distance(nb, geometry, scale = 1, alpha = 1)`.\nCaused by warning in `st_point_on_surface.sfc()`:\n! st_point_on_surface may not give correct results for longitude/latitude data\n```\n:::\n:::\n\n\nThis code is creating spatial weights and neighbor relationships for the counties. It's using contiguity-based neighbors and inverse distance weighting.\n\nLet's compute Gi\\*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngi_stars <- GDPPC_nb %>%\n  group_by(Year) %>%\n  mutate(gi_star = local_gstar_perm(\n    GDPPC, nb, wt)) %>%\n  tidyr::unnest(gi_star)\n```\n:::\n\n\nThis calculates the Getis-Ord G\\* statistic for each county and year, which helps identify hot spots and cold spots of GDP per capita.\n\nMan-Kendall test.\n\nThe Mann-Kendall test is a non-parametric statistical method used for trend analysis in time series data. It performs confirmatory testing to detect the presence of monotonic trends in a dataset. This test is particularly useful for environmental, climate, and hydrological time series where data may not be normally distributed. The Mann-Kendall test assesses whether there is a statistically significant upward or downward trend over time, without assuming any particular distribution of the data. It examines the sign of all possible pairs of observations in the series and calculates a statistic based on the number of positive and negative differences. The test is robust against outliers and can handle missing values, making it versatile for various types of time series analyses. The result indicates whether there is a significant monotonic (consistently increasing or decreasing) trend, but does not specify the magnitude of the trend.\n\nA monotonic series or function is one that only increases (or decreases) and never changes direction. So long as the function either stays flat or continues to increase, it is monotonic.\\\nH0: No monotonic trend\\\nH1: Monotonic trend is present\n\n\\\nInterpretation\\\nReject the null-hypothesis null if the p-value is smaller than the alpha value (i.e. 1-confident level)\\\nTau ranges between -1 and 1 where:\\\n-1 is a perfectly decreasing series, and\\\n\" 1 is a perfectly increasing series.\n\nThe Mann-Kendall test checks if data consistently goes up or down over time, without caring about how much it changes or assuming the data follows any specific pattern.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbg <- gi_stars %>%\n  ungroup() %>%\n  filter(County == \"Changsha\") %>%\n  select(County, Year, gi_star)\np <- ggplot(data = cbg,\n            aes(x = Year,\n                y = gi_star)) +\n  geom_line() + \n  theme_light()\nggplotly(p) #Interactive version. Wrap with a ggplot version.\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-94a1e27ac577598af369\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-94a1e27ac577598af369\">{\"x\":{\"data\":[{\"x\":[2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021],\"y\":[5.0282995066289047,5.1692011079782345,5.2958892892912894,5.6039537096873993,6.2788862246004742,5.9357455762937326,5.7508709054298892,5.6942475830114576,5.7085054237054784,5.7608121561733521,6.097127241257188,6.0036547779673146,6.2028053540357906,6.0371816202738318,6.579432171885526,5.7669155664195504,5.7486534794156494],\"text\":[\"Year: 2005<br />gi_star: 5.028300\",\"Year: 2006<br />gi_star: 5.169201\",\"Year: 2007<br />gi_star: 5.295889\",\"Year: 2008<br />gi_star: 5.603954\",\"Year: 2009<br />gi_star: 6.278886\",\"Year: 2010<br />gi_star: 5.935746\",\"Year: 2011<br />gi_star: 5.750871\",\"Year: 2012<br />gi_star: 5.694248\",\"Year: 2013<br />gi_star: 5.708505\",\"Year: 2014<br />gi_star: 5.760812\",\"Year: 2015<br />gi_star: 6.097127\",\"Year: 2016<br />gi_star: 6.003655\",\"Year: 2017<br />gi_star: 6.202805\",\"Year: 2018<br />gi_star: 6.037182\",\"Year: 2019<br />gi_star: 6.579432\",\"Year: 2020<br />gi_star: 5.766916\",\"Year: 2021<br />gi_star: 5.748653\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.228310502283104,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":43.105022831050235},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[2004.2,2021.8],\"tickmode\":\"array\",\"ticktext\":[\"2005\",\"2010\",\"2015\",\"2020\"],\"tickvals\":[2005,2010,2015,2020],\"categoryorder\":\"array\",\"categoryarray\":[\"2005\",\"2010\",\"2015\",\"2020\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Year\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[4.9507428733660737,6.656988805148357],\"tickmode\":\"array\",\"ticktext\":[\"5.0\",\"5.5\",\"6.0\",\"6.5\"],\"tickvals\":[5,5.5,6,6.5],\"categoryorder\":\"array\",\"categoryarray\":[\"5.0\",\"5.5\",\"6.0\",\"6.5\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"gi_star\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(179,179,179,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"5c8049ff5579\":{\"x\":{},\"y\":{},\"type\":\"scatter\"}},\"cur_data\":\"5c8049ff5579\",\"visdat\":{\"5c8049ff5579\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nLet's test it\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbg %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n    tidyr::unnest_wider(mk)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 5\n    tau      sl     S     D  varS\n  <dbl>   <dbl> <dbl> <dbl> <dbl>\n1 0.485 0.00742    66  136.  589.\n```\n:::\n:::\n\n\nLook at the Tau value. Since it's slightly nearer to 1, it appears like a increasing series.\n\nLet's do this for the whole cube.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa <- gi_stars %>%\n  group_by(County) %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>%\n    tidyr::unnest_wider(mk)\nhead(ehsa)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 6\n  County        tau        sl     S     D  varS\n  <chr>       <dbl>     <dbl> <dbl> <dbl> <dbl>\n1 Anhua      0.191  0.303        26  136.  589.\n2 Anren     -0.294  0.108       -40  136.  589.\n3 Anxiang    0      1             0  136.  589.\n4 Baojing   -0.691  0.000128    -94  136.  589.\n5 Chaling   -0.0882 0.650       -12  136.  589.\n6 Changning -0.750  0.0000318  -102  136.  589.\n```\n:::\n:::\n\n\nThis code performs the Mann-Kendall test for each county to detect trends in the G\\* statistics over time.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa <- emerging_hotspot_analysis(x = GDPPC_st,\n                                  .var = \"GDPPC\",\n                                  k = 1,\n                                  nsim = 99\n                                  )\n```\n:::\n\n\nThis is performing an Emerging Hot Spot Analysis, which identifies trends in the spatial clusters over time. It's using 99 simulations to assess statistical significance.\n\nLastly, we will perform EHSA analysis by using emerging_hotspot_analysis() of sfdep package. It takes a spacetime object x s: (i.e. GDPPC_st), \\> and the quoted name of the ) variable of interest (i.e. GDPPC) for .var argument. The k argument is used to specify the number of time lags which iS set to 1 by default Lastly, nsim map numbers of simulation to be performed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex06_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhunan_ehsa <- hunan %>%\n  left_join(ehsa,\n            by = join_by(County == location))\nehsa_sig <- hunan_ehsa %>%\n  filter(p_value < 0.05)\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ntmap mode set to plotting\n```\n:::\n\n```{.r .cell-code}\ntm_shape(hunan_ehsa) +\n  tm_polygons()+\n  tm_borders(alpha = 0.5)+\ntm_shape(ehsa_sig) + tm_fill(\"classification\") +tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: One tm layer group has duplicated layer types, which are omitted. To\ndraw multiple layers of the same type, use multiple layer groups (i.e. specify\ntm_shape prior to each of them).\n```\n:::\n\n::: {.cell-output-display}\n![](In-class_Ex06_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nThis final block is joining the EHSA results with the spatial data and creating a map to visualize the significant hot and cold spots across the Hunan province.\n\nOverall, this code is conducting a comprehensive spatial-temporal analysis of GDP per capita in Hunan, identifying significant clusters and their trends over time.\n",
    "supporting": [
      "In-class_Ex06_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\r\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\r\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\r\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\r\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\r\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}