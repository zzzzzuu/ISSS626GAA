{
  "hash": "65f984e5da554cb7a80f0e8b10c07164",
  "result": {
    "markdown": "---\ntitle: \"Take-home Exercise 2\"\nauthor: \"Leow Xian Zu\"\ndate: \"23 Sep 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true \n  message: false #no more warning message\n  freeze: true #whatever document already commited does not render\n---\n\n\n# Foreword\n\nTourism plays a vital role in Thailand's economy, contributing significantly to its gross domestic product (GDP). In 2019, the country's tourism sector generated S\\$106 billion from both domestic and international visitors, accounting for approximately 20% of the nation's GDP. In comparison, Singapore's tourism contributes to only 3-4% of our GDP.\n\nHowever, the COVID-19 pandemic dealt a severe blow to this thriving industry, causing revenues to plummet to S\\$31 billion in 2020.\n\nDespite this setback, recent data indicates a gradual recovery in Thailand's tourism sector. However, it is crucial to note that the tourism economy is not uniformly distributed across the country. Three provinces---Bangkok, Phuket, and Chiang Mai---have historically been the focal points of Thailand's tourism industry.\n\nGiven this context, this report aims to conduct a comprehensive spatial and spatio-temporal analysis of Thailand's tourism economy at the province level, with a particular focus on the impacts of COVID-19. The primary objectives of this study are:\n\n1.  To determine whether key indicators of Thailand's tourism economy exhibit spatial and spatio-temporal dependence.\n\n2.  If such dependence is established, to identify clusters, outliers, and emerging hot/cold spot areas within the country.\n\nTo achieve these objectives, this report will employ various spatial and spatio-temporal statistical methods, including:\n\n-   Global spatial autocorrelation analysis\n\n-   Local spatial autocorrelation analysis\n\n-   Emerging hotspot analysis\n\nBy utilising these geospatial analytics techniques, this study seeks to provide insights into the changing dynamics of Thailand's tourism economy in the wake of the COVID-19 pandemic. These findings could prove useful for policymakers, industry stakeholders, and researchers in understanding the spatial patterns of tourism recovery and planning for resilience in the sector.\n\n# Set up\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required libraries\npacman::p_load(\n  tidyverse,    # for data manipulation and visualization\n  sf,           # for spatial data handling\n  sfdep,        # for spatial dependence in sf\n  tmap,         # for thematic maps\n  lubridate,    # for date/time manipulation\n  ggplot2,      # for advanced plotting\n  plotly,       # for plotly tool\n  readr         # for importing data\n)\nset.seed(1234)\n\n# Import the shapefile\nthailand <- st_read(\"data/tha_admbnda_adm1_rtsd_20220121.shp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\zzzzzuu\\ISSS626GAA\\Take-home_Ex\\Take-home_Ex02\\data\\tha_admbnda_adm1_rtsd_20220121.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n:::\n\n```{.r .cell-code}\n# Plot the map\nggplot() +\n  geom_sf(data = thailand) +\n  theme_minimal() +\n  labs(title = \"Thailand Administrative Boundaries (Province Level)\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nThis appears to be the correct boundaries. Let's change it to the right CRS first, to be correct, even though it will not affect out analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nthailand_utm <- st_transform(thailand, crs = 32647) %>%\n  mutate(ADM1_EN = toupper(ADM1_EN))\nthailand_utm\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 325178.8 ymin: 620860.6 xmax: 1213656 ymax: 2263241\nProjected CRS: WGS 84 / UTM zone 47N\nFirst 10 features:\n   Shape_Leng Shape_Area                  ADM1_EN       ADM1_TH ADM1_PCODE\n1    2.417227 0.13133873                  BANGKOK  กรุงเทพมหานคร       TH10\n2    1.695100 0.07926199             SAMUT PRAKAN    สมุทรปราการ       TH11\n3    1.251111 0.05323766               NONTHABURI         นนทบุรี       TH12\n4    1.884945 0.12698345             PATHUM THANI        ปทุมธานี       TH13\n5    3.041716 0.21393797 PHRA NAKHON SI AYUTTHAYA พระนครศรีอยุธยา       TH14\n6    1.739908 0.07920961                ANG THONG        อ่างทอง       TH15\n7    5.693342 0.54578838                 LOP BURI          ลพบุรี       TH16\n8    1.778326 0.06872655                SING BURI         สิงห์บุรี       TH17\n9    2.896316 0.20907828                 CHAI NAT         ชัยนาท       TH18\n10   4.766446 0.29208711                 SARABURI         สระบุรี       TH19\n   ADM1_REF ADM1ALT1EN ADM1ALT2EN ADM1ALT1TH ADM1ALT2TH  ADM0_EN   ADM0_TH\n1      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n2      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n3      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n4      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n5      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n6      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n7      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n8      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n9      <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n10     <NA>       <NA>       <NA>       <NA>       <NA> Thailand ประเทศไทย\n   ADM0_PCODE       date    validOn    validTo                       geometry\n1          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((674339.8 15...\n2          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((687139.8 15...\n3          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((644817.9 15...\n4          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((704086 1575...\n5          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((662941.6 16...\n6          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((643472.8 16...\n7          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((751293.3 17...\n8          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((647136.1 16...\n9          TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((620165.4 17...\n10         TH 2019-02-18 2022-01-22 -001-11-30 MULTIPOLYGON (((757935.1 16...\n```\n:::\n:::\n\n\nLet's import the data and change it to wide form.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Import the CSV file\ntourism_data <- read_csv(\"data/thailand_domestic_tourism_2019_2023_ver2.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 30800 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (5): province_thai, province_eng, region_thai, region_eng, variable\ndbl  (1): value\ndate (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n# Display the first few rows and structure of the data to check\nprint(head(tourism_data))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n  date       province_thai province_eng    region_thai region_eng variable value\n  <date>     <chr>         <chr>           <chr>       <chr>      <chr>    <dbl>\n1 2019-01-01 กรุงเทพมหานคร  Bangkok         ภาคกลาง     central    ratio_t…  93.4\n2 2019-01-01 ลพบุรี          Lopburi         ภาคกลาง     central    ratio_t…  61.3\n3 2019-01-01 พระนครศรีอยุธยา Phra Nakhon Si… ภาคกลาง     central    ratio_t…  73.4\n4 2019-01-01 สระบุรี         Saraburi        ภาคกลาง     central    ratio_t…  67.3\n5 2019-01-01 ชัยนาท         Chainat         ภาคกลาง     central    ratio_t…  79.3\n6 2019-01-01 นครปฐม        Nakhon Pathom   ภาคกลาง     central    ratio_t…  71.7\n```\n:::\n\n```{.r .cell-code}\nglimpse(tourism_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 30,800\nColumns: 7\n$ date          <date> 2019-01-01, 2019-01-01, 2019-01-01, 2019-01-01, 2019-01…\n$ province_thai <chr> \"กรุงเทพมหานคร\", \"ลพบุรี\", \"พระนครศรีอยุธยา\", \"สระบุรี\", \"ชัยนาท…\n$ province_eng  <chr> \"Bangkok\", \"Lopburi\", \"Phra Nakhon Si Ayutthaya\", \"Sarab…\n$ region_thai   <chr> \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"ภาคกลาง\", \"…\n$ region_eng    <chr> \"central\", \"central\", \"central\", \"central\", \"central\", \"…\n$ variable      <chr> \"ratio_tourist_stay\", \"ratio_tourist_stay\", \"ratio_touri…\n$ value         <dbl> 93.37, 61.32, 73.37, 67.33, 79.31, 71.70, 64.65, 71.21, …\n```\n:::\n\n```{.r .cell-code}\n# Check for any missing values\nsum(is.na(tourism_data))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n\n```{.r .cell-code}\n# Clean and prepare the data\ntourism_data_clean <- tourism_data %>%\n  # Remove any rows with missing values\n  na.omit() %>%\n  mutate(province_eng = toupper(province_eng))\n\n# Display the first few rows of the cleaned data\nprint(head(tourism_data_clean))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n  date       province_thai province_eng    region_thai region_eng variable value\n  <date>     <chr>         <chr>           <chr>       <chr>      <chr>    <dbl>\n1 2019-01-01 กรุงเทพมหานคร  BANGKOK         ภาคกลาง     central    ratio_t…  93.4\n2 2019-01-01 ลพบุรี          LOPBURI         ภาคกลาง     central    ratio_t…  61.3\n3 2019-01-01 พระนครศรีอยุธยา PHRA NAKHON SI… ภาคกลาง     central    ratio_t…  73.4\n4 2019-01-01 สระบุรี         SARABURI        ภาคกลาง     central    ratio_t…  67.3\n5 2019-01-01 ชัยนาท         CHAINAT         ภาคกลาง     central    ratio_t…  79.3\n6 2019-01-01 นครปฐม        NAKHON PATHOM   ภาคกลาง     central    ratio_t…  71.7\n```\n:::\n\n```{.r .cell-code}\n# Pivot the data to have variables as columns\ntourism_wide <- tourism_data_clean %>%\n  pivot_wider(\n    id_cols = c(province_eng, date),\n    names_from = variable,\n    values_from = value\n  )\n\ntourism_wide <- tourism_wide %>%\n  mutate(province_eng = case_when(\n    province_eng == \"PHANG NGA\" ~ \"PHANGNGA\",\n    province_eng == \"LOPBURI\" ~ \"LOP BURI\",\n    province_eng == \"CHAINAT\" ~ \"CHAI NAT\",\n    province_eng == \"CHONBURI\" ~ \"CHON BURI\",\n    province_eng == \"PRACHINBURI\" ~ \"PRACHIN BURI\",\n    province_eng == \"BURIRAM\" ~ \"BURI RAM\",\n    province_eng == \"SISAKET\" ~ \"SI SA KET\",\n    province_eng == \"NONG BUA LAMPHU\" ~ \"NONG BUA LAM PHU\",\n    TRUE ~ province_eng  # Keep other names unchanged\n  ))\n\n# Display the wide format data\nprint(head(tourism_wide))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 10\n  province_eng      date       ratio_tourist_stay no_tourist_stay no_tourist_all\n  <chr>             <date>                  <dbl>           <dbl>          <dbl>\n1 BANGKOK           2019-01-01               93.4         3334971        5959075\n2 LOP BURI          2019-01-01               61.3           51858         268664\n3 PHRA NAKHON SI A… 2019-01-01               73.4          117052         730329\n4 SARABURI          2019-01-01               67.3           89850         207236\n5 CHAI NAT          2019-01-01               79.3           27141          79073\n6 NAKHON PATHOM     2019-01-01               71.7          118629         296107\n# ℹ 5 more variables: no_tourist_thai <dbl>, no_tourist_foreign <dbl>,\n#   revenue_all <dbl>, revenue_thai <dbl>, revenue_foreign <dbl>\n```\n:::\n:::\n\n\n# Exploratory Spatial Data Analysis\n\n## What data do we have?\n\n-   \"ratio_tourist_stay\": Refers to the ratio of tourists who stay overnight.\n\n-   \"no_tourist_stay\": Refers to the number of tourists who stay overnight.\n\n-   \"no_tourist_all\": Refers to the total number of tourists.\n\n-   \"no_tourist_thai\": Refers to the number of domestic Thai tourists.\n\n-   \"no_tourist_foreign\": Refers to the number of foreign tourists.\n\n-   \"revenue_all\": Refers to total tourism revenue.\n\n-   \"revenue_thai\": Refers to revenue from domestic tourists.\n\n-   \"revenue_foreign\": Refers to revenue from foreign tourists.\n\n## Join data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate average values for each province across all time periods\ntourism_summary <- tourism_wide %>%\n  group_by(province_eng) %>%\n  summarise(\n    avg_ratio_tourist_stay = mean(ratio_tourist_stay, na.rm = TRUE),\n    avg_no_tourist_stay = mean(no_tourist_stay, na.rm = TRUE),\n    avg_no_tourist_all = mean(no_tourist_all, na.rm = TRUE),\n    avg_no_tourist_thai = mean(no_tourist_thai, na.rm = TRUE),\n    avg_no_tourist_foreign = mean(no_tourist_foreign, na.rm = TRUE),\n    avg_revenue_all = mean(revenue_all, na.rm = TRUE),\n    avg_revenue_thai = mean(revenue_thai, na.rm = TRUE),\n    avg_revenue_foreign = mean(revenue_foreign, na.rm = TRUE),\n    pct_foreign_tourists = mean(no_tourist_foreign / no_tourist_all * 100, na.rm = TRUE),\n    pct_foreign_revenue = mean(revenue_foreign / revenue_all * 100, na.rm = TRUE)\n  )\n\ntourism_summary <- tourism_summary %>%\n  mutate(province_eng = case_when(\n    province_eng == \"PHANG NGA\" ~ \"PHANGNGA\",\n    province_eng == \"LOPBURI\" ~ \"LOP BURI\",\n    province_eng == \"CHAINAT\" ~ \"CHAI NAT\",\n    province_eng == \"CHONBURI\" ~ \"CHON BURI\",\n    province_eng == \"PRACHINBURI\" ~ \"PRACHIN BURI\",\n    province_eng == \"BURIRAM\" ~ \"BURI RAM\",\n    province_eng == \"SISAKET\" ~ \"SI SA KET\",\n    province_eng == \"NONG BUA LAMPHU\" ~ \"NONG BUA LAM PHU\",\n    TRUE ~ province_eng  # Keep other names unchanged\n  ))\n\n# Join the summary data with the spatial data\nthailand_tourism <- thailand_utm %>%\n  mutate(ADM1_EN = toupper(ADM1_EN)) %>%\n  left_join(tourism_summary, by = c(\"ADM1_EN\" = \"province_eng\"))\n```\n:::\n\n\n## Take a look at chloropleth maps\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Map of average ratio of tourist stays\ntm_shape(thailand_tourism) +\n  tm_fill(\"avg_ratio_tourist_stay\", \n          style = \"quantile\", \n          palette = \"YlOrRd\",\n          title = \"Avg. Ratio of Tourist Stays (%)\") +\n  tm_borders() +\n  tm_layout(main.title = \"Average Ratio of Tourist Stays in Thailand\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.outside = TRUE,\n            legend.outside.position = \"right\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Map of average total revenue\ntm_shape(thailand_tourism) +\n  tm_fill(\"avg_revenue_all\", \n          style = \"quantile\", \n          palette = \"YlOrRd\",\n          title = \"Avg. Total Revenue (Baht)\") +\n  tm_borders() +\n  tm_layout(main.title = \"Average Total Tourism Revenue in Thailand\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.outside = TRUE,\n            legend.outside.position = \"right\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-5-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Map of percentage of foreign tourists\ntm_shape(thailand_tourism) +\n  tm_fill(\"pct_foreign_tourists\", \n          style = \"quantile\", \n          palette = \"YlOrRd\",\n          title = \"% Foreign Tourists\") +\n  tm_borders() +\n  tm_layout(main.title = \"Percentage of Foreign Tourists in Thailand\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.outside = TRUE,\n            legend.outside.position = \"right\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-5-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# Map of percentage of revenue from foreign tourists\ntm_shape(thailand_tourism) +\n  tm_fill(\"pct_foreign_revenue\", \n          style = \"quantile\", \n          palette = \"YlOrRd\",\n          title = \"% Revenue from Foreign Tourists\") +\n  tm_borders() +\n  tm_layout(main.title = \"% of Revenue from Foreign Tourists in Thailand\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.outside = TRUE,\n            legend.outside.position = \"right\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-5-4.png){width=672}\n:::\n:::\n\n\n1.  Average Ratio of Tourist Stays in Thailand: This map shows the percentage of tourists who stay overnight in different regions of Thailand. The northern and central regions appear to have higher ratios of tourist stays (40-52%), indicated by the darker red colors. This suggests these areas may have more developed accommodation infrastructure or attractions that encourage longer visits. Coastal areas in the south show a mix of high and low stay ratios, possibly reflecting differences between popular beach resorts and transit areas.\n\n2.  Average Total Tourism Revenue in Thailand: The revenue map highlights significant disparities in tourism income across Thailand. Major tourist destinations like Bangkok, Phuket, and Chiang Mai (identifiable by the dark red areas) generate substantially higher revenues, ranging from 841 million to 36,939 million Baht. This concentration of revenue suggests a highly uneven distribution of tourism benefits across the country, with a few key areas dominating the industry.\n\n3.  Percentage of Foreign Tourists in Thailand: This map illustrates the distribution of international visitors. Coastal areas and major cities show the highest percentages of foreign tourists (9.23% to 45.51%), particularly in the south and around Bangkok. This pattern likely reflects the popularity of beach destinations and cultural sites among international travelers. Interior and northern regions generally have lower percentages of foreign visitors, suggesting a greater reliance on domestic tourism.\n\n4.  Percentage of Revenue from Foreign Tourists in Thailand: The revenue contribution from foreign tourists closely mirrors the distribution of foreign visitors. Coastal areas and major tourist hubs show the highest percentages (12.33% to 65.54%) of revenue from international visitors. This indicates that these regions not only attract more foreign tourists but also derive a significant portion of their tourism income from them. The pattern underscores the economic importance of international tourism to these areas and their potential vulnerability to global travel disruptions.\n\nThese show an average of Thailand's tourism landscape, possibly cluing us into regional disparities in tourist stays, overall revenue, and the role of international visitors in the country's tourism economy.\n\nLet's take a look at the bar chart.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create the histogram\nmean_revenue <- mean(tourism_summary$avg_revenue_all, na.rm = TRUE)\n\nggplot(tourism_summary, aes(x = avg_revenue_all)) +\n  geom_histogram(bins = 30, fill = \"skyblue\", color = \"black\") +\n  geom_vline(xintercept = mean_revenue, color = \"red\", linetype = \"dashed\", size = 1) +\n  annotate(\"text\", x = mean_revenue, y = Inf, label = \"Mean\", \n           vjust = 2, color = \"red\") +\n  theme_minimal() +\n  labs(title = \"Distribution of Average Tourism Revenue Across Provinces\",\n       subtitle = paste(\"Mean Revenue:\", scales::comma(mean_revenue)),\n       x = \"Average Revenue (All)\",\n       y = \"Count\") +\n  scale_x_continuous(labels = scales::comma)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n\n```{.r .cell-code}\nmean_revenue_log <- mean(log(tourism_summary$avg_revenue_all), na.rm = TRUE)\n\nggplot(tourism_summary, aes(x = log(avg_revenue_all))) +\n  geom_histogram(bins = 30, fill = \"skyblue\", color = \"black\") +\n  geom_vline(xintercept = mean_revenue_log, color = \"red\", linetype = \"dashed\", size = 1) +\n  annotate(\"text\", x = mean_revenue_log, y = Inf, label = \"Mean\", \n           vjust = 2, color = \"red\") +\n  theme_minimal() +\n  labs(title = \"Distribution of Log of Average Tourism Revenue Across Provinces\",\n       subtitle = paste(\"Mean LogRevenue:\", scales::comma(mean_revenue_log)),\n       x = \"Log of Average Revenue (All)\",\n       y = \"Count\") +\n  scale_x_continuous(labels = scales::comma)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-6-2.png){width=672}\n:::\n:::\n\n\nUsing log removes the skewness of the data and possibly can help us account for more of Thailand's tourism activity. This accounts for the outlier that is Bangkok, which naturally gains more turism receipts than other provinces.\n\n# Global Moran's I test\n\nMonte Carlo Moran's I is a statistical technique used to assess whether the spatial pattern observed in data is significantly different from what would be expected by random chance alone.\n\nIn this analysis, I will perform Moran's I test on both the average revenue (avg_revenue_all) and its logarithmic transformation (log(avg_revenue_all)) to gain a more comprehensive understanding of the spatial autocorrelation patterns in Thailand's tourism revenue. This approach is taken because tourism revenue data has a skewed distribution, with a few provinces generating significantly higher revenues than others. By using the raw average revenue, we can identify spatial patterns in the absolute economic impact of tourism across provinces. However, this may be dominated by extreme values in high-revenue areas. The log transformation, on the other hand, helps to normalise the data distribution, reducing the impact of outliers and allowing us to detect spatial patterns in the relative differences of tourism performance across provinces. This transformation can reveal subtler spatial relationships that might be obscured in the raw data. The differing results between these two tests can provide insights into whether the spatial clustering is driven primarily by absolute revenue values or by proportional differences between provinces, offering a more nuanced view of the spatial dynamics in Thailand's tourism economy.\n\nFirst let's test whether the average total revenue happened by random chance. To do so, we first need a contiguity matric. We'll use queen's contiguity.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate queen's contiguity\nthailand_nb <- st_contiguity(thailand_tourism, queen = TRUE)\n\n# Identify regions with no neighbors\nno_neighbors <- which(sapply(thailand_nb, function(x) x[1] == 0))\nno_neighbors\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 67\n```\n:::\n\n```{.r .cell-code}\n# Manually add nearest neighbor for regions with no neighbors\nthailand_nb[[67]] <- as.integer(66)\nthailand_nb[[66]] <- as.integer(unique(c(thailand_nb[[66]], 67)))\nstr(thailand_nb)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nList of 77\n $ : int [1:6] 2 3 4 15 59 60\n $ : int [1:2] 1 15\n $ : int [1:4] 1 4 5 59\n $ : int [1:6] 1 3 5 10 15 17\n $ : int [1:7] 3 4 6 7 10 58 59\n $ : int [1:4] 5 7 8 58\n $ : int [1:8] 5 6 8 10 19 25 48 55\n $ : int [1:5] 6 7 9 48 58\n $ : int [1:4] 8 48 49 58\n $ : int [1:5] 4 5 7 17 19\n $ : int [1:3] 12 13 15\n $ : int [1:2] 11 13\n $ : int [1:5] 11 12 14 15 18\n $ : int 13\n $ : int [1:8] 1 2 4 11 13 16 17 18\n $ : int [1:4] 15 17 18 19\n $ : int [1:5] 4 10 15 16 19\n $ : int [1:5] 13 15 16 19 20\n $ : int [1:8] 7 10 16 17 18 20 25 29\n $ : int [1:5] 18 19 21 29 33\n $ : int [1:4] 20 22 33 34\n $ : int [1:4] 21 23 24 34\n $ : int [1:3] 22 24 26\n $ : int [1:5] 22 23 26 34 38\n $ : int [1:4] 7 19 29 55\n $ : int [1:3] 23 24 38\n $ : int [1:3] 32 36 37\n $ : int [1:3] 29 30 31\n $ : int [1:9] 19 20 25 28 30 31 33 35 55\n $ : int [1:6] 28 29 31 32 35 36\n $ : int [1:6] 28 29 30 32 53 55\n $ : int [1:4] 27 30 31 36\n $ : int [1:5] 20 21 29 34 35\n $ : int [1:6] 21 22 24 33 35 38\n $ : int [1:6] 29 30 33 34 36 38\n $ : int [1:6] 27 30 32 35 37 38\n $ : int [1:3] 27 36 38\n $ : int [1:6] 24 26 34 35 36 37\n $ : int [1:5] 40 41 46 47 51\n $ : int [1:3] 39 41 51\n $ : int [1:7] 39 40 43 45 46 51 52\n $ : int [1:4] 43 44 52 53\n $ : int [1:5] 41 42 44 45 52\n $ : int [1:3] 42 43 45\n $ : int [1:4] 41 43 44 46\n $ : int [1:3] 39 41 45\n $ : int [1:2] 39 51\n $ : int [1:8] 7 8 9 49 50 51 54 55\n $ : int [1:5] 9 48 51 57 58\n $ : int [1:5] 48 51 52 53 54\n $ : int [1:9] 39 40 41 47 48 49 50 52 57\n $ : int [1:6] 41 42 43 50 51 53\n $ : int [1:6] 31 42 50 52 54 55\n $ : int [1:4] 48 50 53 55\n $ : int [1:7] 7 25 29 31 48 53 54\n $ : int [1:5] 57 59 60 61 62\n $ : int [1:5] 49 51 56 58 59\n $ : int [1:7] 5 6 8 9 49 57 59\n $ : int [1:7] 1 3 5 56 57 58 60\n $ : int [1:4] 1 56 59 61\n $ : int [1:3] 56 60 62\n $ : int [1:3] 56 61 63\n $ : int [1:2] 62 70\n $ : int [1:5] 65 68 71 73 74\n $ : int [1:4] 64 66 68 73\n $ : int [1:4] 65 68 69 67\n $ : int 66\n $ : int [1:5] 64 65 66 69 70\n $ : int [1:3] 66 68 70\n $ : int [1:3] 63 68 69\n $ : int [1:5] 64 72 74 75 76\n $ : int [1:3] 71 73 74\n $ : int [1:4] 64 65 72 74\n $ : int [1:4] 64 71 72 73\n $ : int [1:3] 71 76 77\n $ : int [1:3] 71 75 77\n $ : int [1:2] 75 76\n - attr(*, \"class\")= chr [1:2] \"nb\" \"list\"\n - attr(*, \"region.id\")= chr [1:77] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language spdep::poly2nb(pl = geometry, queen = queen)\n - attr(*, \"type\")= chr \"queen\"\n - attr(*, \"sym\")= logi TRUE\n```\n:::\n\n```{.r .cell-code}\n# Link Phuket to Phang Nga and vice versa because they are linked by bridge\n\n# Check is still got empty\nno_neighbors <- which(sapply(thailand_nb, function(x) x[1] == 0))\nno_neighbors\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ninteger(0)\n```\n:::\n\n```{.r .cell-code}\nthailand_weights <- st_weights(thailand_nb, style = \"W\")\n\nwm_q <- thailand_tourism %>%\n    mutate(\n        nb = thailand_nb,   \n        wt = thailand_weights,\n        .before = 1\n    )\n\n# Check the resulting structure\nstr(wm_q)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nClasses 'sf' and 'data.frame':\t77 obs. of  29 variables:\n $ nb                    :List of 77\n  ..$ : int  2 3 4 15 59 60\n  ..$ : int  1 15\n  ..$ : int  1 4 5 59\n  ..$ : int  1 3 5 10 15 17\n  ..$ : int  3 4 6 7 10 58 59\n  ..$ : int  5 7 8 58\n  ..$ : int  5 6 8 10 19 25 48 55\n  ..$ : int  6 7 9 48 58\n  ..$ : int  8 48 49 58\n  ..$ : int  4 5 7 17 19\n  ..$ : int  12 13 15\n  ..$ : int  11 13\n  ..$ : int  11 12 14 15 18\n  ..$ : int 13\n  ..$ : int  1 2 4 11 13 16 17 18\n  ..$ : int  15 17 18 19\n  ..$ : int  4 10 15 16 19\n  ..$ : int  13 15 16 19 20\n  ..$ : int  7 10 16 17 18 20 25 29\n  ..$ : int  18 19 21 29 33\n  ..$ : int  20 22 33 34\n  ..$ : int  21 23 24 34\n  ..$ : int  22 24 26\n  ..$ : int  22 23 26 34 38\n  ..$ : int  7 19 29 55\n  ..$ : int  23 24 38\n  ..$ : int  32 36 37\n  ..$ : int  29 30 31\n  ..$ : int  19 20 25 28 30 31 33 35 55\n  ..$ : int  28 29 31 32 35 36\n  ..$ : int  28 29 30 32 53 55\n  ..$ : int  27 30 31 36\n  ..$ : int  20 21 29 34 35\n  ..$ : int  21 22 24 33 35 38\n  ..$ : int  29 30 33 34 36 38\n  ..$ : int  27 30 32 35 37 38\n  ..$ : int  27 36 38\n  ..$ : int  24 26 34 35 36 37\n  ..$ : int  40 41 46 47 51\n  ..$ : int  39 41 51\n  ..$ : int  39 40 43 45 46 51 52\n  ..$ : int  43 44 52 53\n  ..$ : int  41 42 44 45 52\n  ..$ : int  42 43 45\n  ..$ : int  41 43 44 46\n  ..$ : int  39 41 45\n  ..$ : int  39 51\n  ..$ : int  7 8 9 49 50 51 54 55\n  ..$ : int  9 48 51 57 58\n  ..$ : int  48 51 52 53 54\n  ..$ : int  39 40 41 47 48 49 50 52 57\n  ..$ : int  41 42 43 50 51 53\n  ..$ : int  31 42 50 52 54 55\n  ..$ : int  48 50 53 55\n  ..$ : int  7 25 29 31 48 53 54\n  ..$ : int  57 59 60 61 62\n  ..$ : int  49 51 56 58 59\n  ..$ : int  5 6 8 9 49 57 59\n  ..$ : int  1 3 5 56 57 58 60\n  ..$ : int  1 56 59 61\n  ..$ : int  56 60 62\n  ..$ : int  56 61 63\n  ..$ : int  62 70\n  ..$ : int  65 68 71 73 74\n  ..$ : int  64 66 68 73\n  ..$ : int  65 68 69 67\n  ..$ : int 66\n  ..$ : int  64 65 66 69 70\n  ..$ : int  66 68 70\n  ..$ : int  63 68 69\n  ..$ : int  64 72 74 75 76\n  ..$ : int  71 73 74\n  ..$ : int  64 65 72 74\n  ..$ : int  64 71 72 73\n  ..$ : int  71 76 77\n  ..$ : int  71 75 77\n  ..$ : int  75 76\n  ..- attr(*, \"class\")= chr [1:2] \"nb\" \"list\"\n  ..- attr(*, \"region.id\")= chr [1:77] \"1\" \"2\" \"3\" \"4\" ...\n  ..- attr(*, \"call\")= language spdep::poly2nb(pl = geometry, queen = queen)\n  ..- attr(*, \"type\")= chr \"queen\"\n  ..- attr(*, \"sym\")= logi TRUE\n $ wt                    :List of 77\n  ..$ : num  0.167 0.167 0.167 0.167 0.167 ...\n  ..$ : num  0.5 0.5\n  ..$ : num  0.25 0.25 0.25 0.25\n  ..$ : num  0.167 0.167 0.167 0.167 0.167 ...\n  ..$ : num  0.143 0.143 0.143 0.143 0.143 ...\n  ..$ : num  0.25 0.25 0.25 0.25\n  ..$ : num  0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n  ..$ : num  0.2 0.2 0.2 0.2 0.2\n  ..$ : num  0.25 0.25 0.25 0.25\n  ..$ : num  0.2 0.2 0.2 0.2 0.2\n  ..$ : num  0.333 0.333 0.333\n  ..$ : num  0.5 0.5\n  ..$ : num  0.2 0.2 0.2 0.2 0.2\n  ..$ : num 1\n  ..$ : num  0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n  ..$ : num  0.25 0.25 0.25 0.25\n  ..$ : num  0.2 0.2 0.2 0.2 0.2\n  ..$ : num  0.2 0.2 0.2 0.2 0.2\n  ..$ : num  0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n  ..$ : num  0.2 0.2 0.2 0.2 0.2\n  ..$ : num  0.25 0.25 0.25 0.25\n  ..$ : num  0.25 0.25 0.25 0.25\n  ..$ : num  0.333 0.333 0.333\n  ..$ : num  0.2 0.2 0.2 0.2 0.2\n  ..$ : num  0.25 0.25 0.25 0.25\n  ..$ : num  0.333 0.333 0.333\n  ..$ : num  0.333 0.333 0.333\n  ..$ : num  0.333 0.333 0.333\n  ..$ : num  0.111 0.111 0.111 0.111 0.111 ...\n  ..$ : num  0.167 0.167 0.167 0.167 0.167 ...\n  ..$ : num  0.167 0.167 0.167 0.167 0.167 ...\n  ..$ : num  0.25 0.25 0.25 0.25\n  ..$ : num  0.2 0.2 0.2 0.2 0.2\n  ..$ : num  0.167 0.167 0.167 0.167 0.167 ...\n  ..$ : num  0.167 0.167 0.167 0.167 0.167 ...\n  ..$ : num  0.167 0.167 0.167 0.167 0.167 ...\n  ..$ : num  0.333 0.333 0.333\n  ..$ : num  0.167 0.167 0.167 0.167 0.167 ...\n  ..$ : num  0.2 0.2 0.2 0.2 0.2\n  ..$ : num  0.333 0.333 0.333\n  ..$ : num  0.143 0.143 0.143 0.143 0.143 ...\n  ..$ : num  0.25 0.25 0.25 0.25\n  ..$ : num  0.2 0.2 0.2 0.2 0.2\n  ..$ : num  0.333 0.333 0.333\n  ..$ : num  0.25 0.25 0.25 0.25\n  ..$ : num  0.333 0.333 0.333\n  ..$ : num  0.5 0.5\n  ..$ : num  0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n  ..$ : num  0.2 0.2 0.2 0.2 0.2\n  ..$ : num  0.2 0.2 0.2 0.2 0.2\n  ..$ : num  0.111 0.111 0.111 0.111 0.111 ...\n  ..$ : num  0.167 0.167 0.167 0.167 0.167 ...\n  ..$ : num  0.167 0.167 0.167 0.167 0.167 ...\n  ..$ : num  0.25 0.25 0.25 0.25\n  ..$ : num  0.143 0.143 0.143 0.143 0.143 ...\n  ..$ : num  0.2 0.2 0.2 0.2 0.2\n  ..$ : num  0.2 0.2 0.2 0.2 0.2\n  ..$ : num  0.143 0.143 0.143 0.143 0.143 ...\n  ..$ : num  0.143 0.143 0.143 0.143 0.143 ...\n  ..$ : num  0.25 0.25 0.25 0.25\n  ..$ : num  0.333 0.333 0.333\n  ..$ : num  0.333 0.333 0.333\n  ..$ : num  0.5 0.5\n  ..$ : num  0.2 0.2 0.2 0.2 0.2\n  ..$ : num  0.25 0.25 0.25 0.25\n  ..$ : num  0.25 0.25 0.25 0.25\n  ..$ : num 1\n  ..$ : num  0.2 0.2 0.2 0.2 0.2\n  ..$ : num  0.333 0.333 0.333\n  ..$ : num  0.333 0.333 0.333\n  ..$ : num  0.2 0.2 0.2 0.2 0.2\n  ..$ : num  0.333 0.333 0.333\n  ..$ : num  0.25 0.25 0.25 0.25\n  ..$ : num  0.25 0.25 0.25 0.25\n  ..$ : num  0.333 0.333 0.333\n  ..$ : num  0.333 0.333 0.333\n  ..$ : num  0.5 0.5\n  ..- attr(*, \"mode\")= chr \"binary\"\n  ..- attr(*, \"W\")= logi TRUE\n  ..- attr(*, \"comp\")=List of 1\n  .. ..$ d: num [1:77] 6 2 4 6 7 4 8 5 4 5 ...\n $ Shape_Leng            : num  2.42 1.7 1.25 1.88 3.04 ...\n $ Shape_Area            : num  0.1313 0.0793 0.0532 0.127 0.2139 ...\n $ ADM1_EN               : chr  \"BANGKOK\" \"SAMUT PRAKAN\" \"NONTHABURI\" \"PATHUM THANI\" ...\n $ ADM1_TH               : chr  \"กรุงเทพมหานคร\" \"สมุทรปราการ\" \"นนทบุรี\" \"ปทุมธานี\" ...\n $ ADM1_PCODE            : chr  \"TH10\" \"TH11\" \"TH12\" \"TH13\" ...\n $ ADM1_REF              : chr  NA NA NA NA ...\n $ ADM1ALT1EN            : chr  NA NA NA NA ...\n $ ADM1ALT2EN            : chr  NA NA NA NA ...\n $ ADM1ALT1TH            : chr  NA NA NA NA ...\n $ ADM1ALT2TH            : chr  NA NA NA NA ...\n $ ADM0_EN               : chr  \"Thailand\" \"Thailand\" \"Thailand\" \"Thailand\" ...\n $ ADM0_TH               : chr  \"ประเทศไทย\" \"ประเทศไทย\" \"ประเทศไทย\" \"ประเทศไทย\" ...\n $ ADM0_PCODE            : chr  \"TH\" \"TH\" \"TH\" \"TH\" ...\n $ date                  : Date, format: \"2019-02-18\" \"2019-02-18\" ...\n $ validOn               : Date, format: \"2022-01-22\" \"2022-01-22\" ...\n $ validTo               : Date, format: \"-001-11-30\" \"-001-11-30\" ...\n $ avg_ratio_tourist_stay: num  43.8 32 36.4 28.6 42.8 ...\n $ avg_no_tourist_stay   : num  1508737 48607 48158 24805 60806 ...\n $ avg_no_tourist_all    : num  3027050 162207 157251 106477 476473 ...\n $ avg_no_tourist_thai   : num  2137997 118545 149184 91470 417236 ...\n $ avg_no_tourist_foreign: num  889053 43662 8067 15007 59237 ...\n $ avg_revenue_all       : num  3.69e+10 2.81e+08 2.24e+08 1.53e+08 8.76e+08 ...\n $ avg_revenue_thai      : num  1.48e+10 1.81e+08 2.06e+08 1.22e+08 7.16e+08 ...\n $ avg_revenue_foreign   : num  2.21e+10 9.94e+07 1.80e+07 3.14e+07 1.60e+08 ...\n $ pct_foreign_tourists  : num  22.34 17.64 3.6 8.73 9.35 ...\n $ pct_foreign_revenue   : num  44.95 21.07 5.06 11.56 12.53 ...\n $ geometry              :sfc_MULTIPOLYGON of length 77; first list element: List of 1\n  ..$ :List of 1\n  .. ..$ : num [1:8501, 1:2] 674340 674382 674449 674458 674467 ...\n  ..- attr(*, \"class\")= chr [1:3] \"XY\" \"MULTIPOLYGON\" \"sfg\"\n - attr(*, \"sf_column\")= chr \"geometry\"\n - attr(*, \"agr\")= Factor w/ 3 levels \"constant\",\"aggregate\",..: NA NA NA NA NA NA NA NA NA NA ...\n  ..- attr(*, \"names\")= chr [1:28] \"nb\" \"wt\" \"Shape_Leng\" \"Shape_Area\" ...\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform Monte Carlo simulation for Moran's I\n\nmc_moran <- global_moran_test(\n  log(thailand_tourism$avg_revenue_all),\n  thailand_nb,\n  thailand_weights\n)\n# Print the results\nprint(mc_moran)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.8404, p-value = 0.002253\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.204345202      -0.013157895       0.005863852 \n```\n:::\n:::\n\n\n1.  Moran's I statistic is close to zero, suggesting weak spatial autocorrelation. A value of -1 indicates perfect dispersion, +1 indicates perfect correlation, and 0 indicates a random spatial pattern.\n\n2.  p-value is \\> 0.05. This indicates that we fail to reject the null hypothesis of spatial randomness. There is no significant evidence of positive spatial autocorrelation in average total revenue across Thailand's provinces. The spatial pattern of tourism revenue appears to be randomly distributed, rather than clustered or dispersed.\n\nLet's take a look at Monte Carlo Simluation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc_moran_sim <- global_moran_perm(\n  thailand_tourism$avg_revenue_all,\n  thailand_nb,\n  thailand_weights,\n  nsim = 999  # number of simulations\n)\n\n# Print the results\nprint(mc_moran_sim)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = -0.030518, observed rank = 464, p-value = 0.928\nalternative hypothesis: two.sided\n```\n:::\n\n```{.r .cell-code}\n# Visualize the results\nhist(mc_moran_sim$res, \n     freq = TRUE, \n     breaks = 20, \n     xlab = \"Moran's I\", \n     main = \"Histogram of simulated Moran's I\")\nabline(v = 0, col = \"red\", lwd = 2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nIt appears that findings are similar to that one the single test.\n\nThis suggests that high or low tourism revenue in one province does not necessarily correspond to similar values in neighboring provinces. The economic performance of the tourism sector in each province seems to be independent of its geographical location relative to other provinces. This may be because tourism doesn't spread out from the popular places. Rather, if tourists are interested in surrounding areas, they would fly straight to that destination.\n\nOr this could be because we used average revenue. Let's take a look at logged value.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform Monte Carlo simulation for Moran's I\n\nmc_moran <- global_moran_test(\n  log(thailand_tourism$avg_revenue_all),\n  thailand_nb,\n  thailand_weights\n)\n# Print the results\nprint(mc_moran)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tMoran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 2.8404, p-value = 0.002253\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.204345202      -0.013157895       0.005863852 \n```\n:::\n:::\n\n\nMoran's I statistic is positive. It indicates a positive spatial autocorrelation. It suggests that similar values (either high or low) of average revenue tend to cluster together geographically more than would be expected by chance.\n\np-value is below the significance level of 0.05. It indicates strong evidence against the null hypothesis of spatial randomness. In other words, the spatial pattern observed is very unlikely to have occurred by chance.\n\nThe results provide strong evidence of positive spatial autocorrelation in the log-transformed average tourism revenue across Thailand's provinces. This means that provinces with high tourism revenues tend to be located near other provinces with high revenues, and provinces with low revenues tend to be near other low-revenue provinces.\n\nLet's try applying this to the change in revenue from Jul 2021 (trough of revenue) and Jan 2023 (one of the peaks in revenue).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrevenue_comparison <- tourism_wide %>%\n  filter(date %in% c(as.Date(\"2021-07-01\"), as.Date(\"2023-01-01\"))) %>%\n  select(province_eng, date, revenue_all) %>%\n  pivot_wider(names_from = date, values_from = revenue_all, names_prefix = \"revenue_\") %>%\n  mutate(\n    delta_jul21_jan23 = `revenue_2023-01-01` - `revenue_2021-07-01`,\n    province_eng = toupper(province_eng)\n  ) %>%\n  select(province_eng, delta_jul21_jan23)\n\n# Now, let's join this new data to our existing thailand_tourism dataframe\nthailand_tourism_diff <- thailand_tourism %>%\n  left_join(revenue_comparison, by = c(\"ADM1_EN\" = \"province_eng\"))\n\nmc_moran_diff <- global_moran_perm(\n  thailand_tourism_diff$delta_jul21_jan23,\n  thailand_nb,\n  thailand_weights,\n  nsim=999\n)\n# Print the results\nprint(mc_moran_diff)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = -0.039269, observed rank = 280, p-value = 0.56\nalternative hypothesis: two.sided\n```\n:::\n:::\n\n\nBased on these results, there is no significant evidence of spatial autocorrelation in the changes in tourism revenue across Thailand's provinces between July 2021 and January 2023. The spatial pattern of revenue changes appears to be randomly distributed, rather than clustered or dispersed.\n\nThis suggests that the recovery (or changes) in tourism revenue from July 2021 to January 2023 was not geographically dependent. Neighboring provinces did not necessarily experience similar trends in revenue changes. It could be possible that during recovery, tourists flocked to popular places first. The tourism dollars did not spill into neighbouring provinces.\n\n# Local Indicators of Spatial Association\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa <- thailand_tourism_diff %>% \n  mutate(local_moran = local_moran(\n    thailand_tourism_diff$avg_revenue_all,\n    thailand_nb, \n    thailand_weights, \n    nsim = 99,),\n    .before = 1) %>%\n  unnest(local_moran)\n\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ntmap mode set to plotting\n```\n:::\n\n```{.r .cell-code}\nlocalMI.ii <- tm_shape(lisa) +\n  tm_fill(col = \"ii\", \n          style = \"pretty\", \n          title = \"local Moran's I of Revenue\") +\n  tm_borders(alpha = 0.5)\n\nlocalMI.p_ii <- tm_shape(lisa) +\n  tm_fill(col = \"p_ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I of Revenue\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.ii, localMI.p_ii, asp=1, ncol=2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nMost provinces shows values between -0.5 and 0.5 (yellow to light green), indicating weak spatial autocorrelation. But there is a notable red area in the central region (Bangkok and surrounding provinces) with values between -2.0 to -1.5, suggesting strong negative spatial autocorrelation.\n\nThe blue map shows the statistical significance of the Local Moran's I values. A cluster of dark blue areas (p \\< 0.001) is visible in the central region, corresponding to thearea surrounding the red area in the yellow map. Most other areas are light blue or white, indicating less significant or non-significant results.\n\nBangkok shows strong, statistically significant negative spatial autocorrelation. This suggests that this area's revenue is significantly different from its neighbors. This might be a Low-High Cluster. The strong negative values in Bangkok, combined with high statistical significance, suggest this area might be a \"low-high\" cluster - an area with low values surrounded by high values (or vice versa).\n\nSimilarly, we should take a look at the normalised values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlisa <- thailand_tourism_diff %>% \n  mutate(local_moran = local_moran(\n    log(thailand_tourism_diff$avg_revenue_all),\n    thailand_nb, \n    thailand_weights, \n    nsim = 99,),\n    .before = 1) %>%\n  unnest(local_moran)\n\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ntmap mode set to plotting\n```\n:::\n\n```{.r .cell-code}\nlocalMI.ii <- tm_shape(lisa) +\n  tm_fill(col = \"ii\", \n          style = \"pretty\", \n          title = \"local Moran's I of Revenue\") +\n  tm_borders(alpha = 0.5)\n\nlocalMI.p_ii <- tm_shape(lisa) +\n  tm_fill(col = \"p_ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I of Revenue\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.ii, localMI.p_ii, asp=1, ncol=2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nVariable(s) \"ii\" contains positive and negative values, so midpoint is set to 0. Set midpoint = NA to show the full spectrum of the color palette.\n```\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nThe log-transformed revenue data reveals more nuanced spatial patterns compared to the raw revenue data. This suggests that relative differences in tourism revenue between neighboring provinces are important. High-High Clusters: The northeastern region shows signs of positive autocorrelation with high significance. This could indicate a cluster of provinces with similarly high (relative to their scale) tourism revenues. Low-Low Clusters: Some central and southern provinces show negative autocorrelation, which might represent clusters of provinces with lower tourism revenues relative to their neighbors.\n\nThe eastern seaboard's significant results suggest a distinct tourism pattern in this region, possibly related to coastal and industrial tourism.\n\nThis analysis reveals that the spatial patterns of tourism revenue in Thailand are more complex when considering relative performance rather than absolute values.\n\n# **Hot Spot and Cold Spot Area Analysis (HCSA)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngi_stars <- thailand_tourism_diff %>%\n  mutate(\n    gi_star = local_g_perm(\n      log(avg_revenue_all),\n      nb = thailand_nb,\n      wt = thailand_weights,\n      nsim = 999\n    )\n  ) %>%\n  unnest(gi_star)\n\ngistarplot <- tm_shape(gi_stars) +\n  tm_fill(\n    col = \"gi\",\n    style = \"pretty\",\n    palette = \"-RdBu\",\n    midpoint = 0,\n    title = \"Gi* Statistic\"\n  ) +\n  tm_borders(alpha = 0.5) +\n  tm_layout(\n    main.title = \"Hot Spot and Cold Spot Analysis of Tourism Revenue\",\n    main.title.size = 0.8\n  )\n\ngistarpplot<-tm_shape(gi_stars) +\n  tm_fill(\n    col = \"p_value\",\n    breaks = c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n    palette = \"-Blues\",\n    title = \"p-value of Gi*\"\n  ) +\n  tm_borders(alpha = 0.5) +\n  tm_layout(\n    main.title = \"Significance of Hot and Cold Spots\",\n    main.title.size = 0.8\n  )\ntmap_arrange(gistarplot, gistarpplot, asp=1, ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\nLet's analyse the Hot Spot and Cold Spot Analysis (HCSA) maps for tourism revenue in Thailand.\n\nNortheastern sees a large cluster of dark blue provinces, indicating a significant cold spot (low values clustered together). Central region (including Bangkok): Shows a mix of red and blue, indicating a complex pattern of hot and cold spots. Southern region: Exhibits mostly orange to red colors, suggesting potential hot spots, especially in popular tourist destinations.\n\nMany provinces, especially in the north and west, show less significant or non-significant results (light blue to white).\n\nNortheastern Cold Spot is a large, statistically significant cold spot that suggests that this region consistently underperforms in tourism revenue compared to the other provinces. This could be due to less developed tourism infrastructure or fewer popular attractions. Eastern Seaboard Hot Spot is a significant hot spot indicating a cluster of high-performing provinces in terms of tourism revenue. This could be attributed to popular beach destinations, well-developed infrastructure, or proximity to Bangkok. Bangkok and Central Region has a mixed pattern around Bangkok suggests a complex tourism landscape, possibly reflecting the capital's unique position and its impact on surrounding areas. Southern Tourism Strength: The tendency towards hot spots in the south, although with varying significance, aligns with the popularity of southern beach destinations. The clustering of significant results confirms that tourism performance is indeed spatially dependent, with neighboring provinces often showing similar patterns.\n\n# Emerging hot spot cold spot analysis\n\nWhile the Hot Spot and Cold Spot Analysis (HCSA) provides valuable insights into the spatial patterns of Thailand's tourism revenue, it offers only a static snapshot of the situation. This approach, though informative, is insufficient for capturing the dynamic nature of the tourism industry, especially in the context of recovering from the COVID-19 pandemic. Tourism patterns can change significantly over time due to factors such as seasonality, economic fluctuations, policy changes, and global events. The emerging hot spot analysis addresses this limitation by incorporating a temporal dimension into our spatial analysis. By creating a space-time cube, we can examine how tourism revenue patterns have evolved over different time periods. This approach allows us to identify not just areas of high or low performance, but also emerging trends, such as areas that are becoming increasingly popular (emerging hot spots) or those experiencing declining tourism activity (emerging cold spots). Such temporal-spatial analysis is particularly crucial in the post-pandemic context, as it can reveal which areas are recovering faster, which are struggling to regain their tourism momentum, and where new tourism patterns might be emerging. This dynamic view is essential for policymakers and stakeholders in developing adaptive strategies that respond to the changing landscape of Thailand's tourism industry.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourism_log <- tourism_wide %>%\n  mutate(revenue_all = if_else(revenue_all == 0, 1, revenue_all)) %>% #change zeroes to 1 to have a full log\n  mutate(log_revenue_all = log(revenue_all))\n\n# Create running month column\n\ntourism_log_time <- tourism_log %>%\n  mutate(\n    running_month = (as.numeric(format(date, \"%Y\")) - 2019) * 12 + as.numeric(format(date, \"%m\")),\n    year = year(date),\n    month = month(date),\n    day = day(date) \n  ) %>%\n  rename(ADM1_EN=province_eng)\n  \n\ntourism_spacetime <- spacetime(tourism_log_time, thailand_utm,\n                      .loc_col = \"ADM1_EN\",\n                      .time_col = \"running_month\")\nis_spacetime_cube(tourism_spacetime)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\nIn this code segment, I am preparing the tourism data for a spatio-temporal analysis. First, I modify the 'revenue_all' column by replacing any zero values with 1. This is done to avoid undefined results when taking the logarithm, as log(0) is undefined. Revenue of 1 is as good as 0 as it is in Thai Baht. I then create a new column 'log_revenue_all' by applying a logarithmic transformation to the modified revenue data. This transformation helps to normalize the revenue distribution, which is often skewed in economic data.\n\nNext, I create a 'running_month' column to establish a consistent time scale across the dataset. This column represents the number of months since January 2019, allowing for a uniform temporal measure. I also extract separate columns for year, month, and day from the date column for potential additional analyses.\n\nFinally, I use the 'spacetime' function to create a spatio-temporal cube, combining the temporal data from 'tourism_log_time' with the spatial data from 'thailand_utm'. This cube structure allows me to analyze how tourism revenue changes both across different provinces (space) and over time. The 'is_spacetime_cube' function is then used to verify that the resulting object is indeed a valid spatio-temporal cube, ensuring that my data is correctly formatted for subsequent spatio-temporal analyses.\n\n## Computing Gi\\*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntourism_spacetime_nb <- tourism_spacetime %>%\n  activate(\"geometry\") %>%\n  mutate(nb = include_self(\n    st_contiguity(geometry)),\n    wt = st_inverse_distance(nb, \n                             geometry, \n                             scale = 1,\n                             alpha = 1),\n    .before = 1) %>%\n  set_nbs(\"nb\") %>%\n  set_wts(\"wt\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n! Polygon provided. Using point on surface.\n```\n:::\n\n```{.r .cell-code}\n#Computing Gi*\n\ngi_stars <- tourism_spacetime_nb %>% \n  group_by(running_month) %>% \n  mutate(gi_star = local_gstar_perm(\n    log_revenue_all , nb, wt)) %>% \n  tidyr::unnest(gi_star)\n\n#Mann-Kendall Test on Gi*\n\n\ngistars_bkk <- gi_stars %>% \n  ungroup() %>% \n  filter(ADM1_EN == \"BANGKOK\") %>% \n  select(ADM1_EN, running_month, gi_star)\n\np <- ggplot(data = gistars_bkk, \n       aes(x = running_month, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\nggplotly(p)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-4310862eb67279a4802f\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-4310862eb67279a4802f\">{\"x\":{\"data\":[{\"x\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],\"y\":[1.7242455835383612,1.7674447584103394,1.7716571894763404,1.9785089509115568,2.0799473924206282,2.085746155761171,2.3529136788408183,2.415696988570093,2.3195956136115594,2.0228727287559192,2.1276774207960045,2.0386787687987917,1.7371337169064549,1.436247529740488,0.92200123430353742,-0.081953198189587725,-0.16466869505601633,1.9091043456898009,1.3983733672215488,1.8208348871177211,1.7682258886395623,1.4953134613070405,1.7713699875356761,1.087428591811618,-0.89625373075116954,1.3978253763655273,0.92145705104520703,0.33462385170442971,0.75981375340539692,0.25661717337176287,-0.13914918711767307,0.064515622018367594,1.3844945981459846,1.8205247065945052,1.3612344394878584,1.7768827449697626,1.5603279085079398,1.5078703334667778,1.7204375425476306,1.7220794780388122,1.7179697892152543,1.8025724815815494,1.9333990660846279,1.994193095759333,2.0447867143230392,2.0268783250755043,2.2296178640841684,2.153421845987249,2.1664261645739269,2.1046615650993066],\"text\":[\"running_month:  1<br />gi_star:  1.72424558\",\"running_month:  2<br />gi_star:  1.76744476\",\"running_month:  3<br />gi_star:  1.77165719\",\"running_month:  4<br />gi_star:  1.97850895\",\"running_month:  5<br />gi_star:  2.07994739\",\"running_month:  6<br />gi_star:  2.08574616\",\"running_month:  7<br />gi_star:  2.35291368\",\"running_month:  8<br />gi_star:  2.41569699\",\"running_month:  9<br />gi_star:  2.31959561\",\"running_month: 10<br />gi_star:  2.02287273\",\"running_month: 11<br />gi_star:  2.12767742\",\"running_month: 12<br />gi_star:  2.03867877\",\"running_month: 13<br />gi_star:  1.73713372\",\"running_month: 14<br />gi_star:  1.43624753\",\"running_month: 15<br />gi_star:  0.92200123\",\"running_month: 16<br />gi_star: -0.08195320\",\"running_month: 17<br />gi_star: -0.16466870\",\"running_month: 18<br />gi_star:  1.90910435\",\"running_month: 19<br />gi_star:  1.39837337\",\"running_month: 20<br />gi_star:  1.82083489\",\"running_month: 21<br />gi_star:  1.76822589\",\"running_month: 22<br />gi_star:  1.49531346\",\"running_month: 23<br />gi_star:  1.77136999\",\"running_month: 24<br />gi_star:  1.08742859\",\"running_month: 25<br />gi_star: -0.89625373\",\"running_month: 26<br />gi_star:  1.39782538\",\"running_month: 27<br />gi_star:  0.92145705\",\"running_month: 28<br />gi_star:  0.33462385\",\"running_month: 29<br />gi_star:  0.75981375\",\"running_month: 30<br />gi_star:  0.25661717\",\"running_month: 31<br />gi_star: -0.13914919\",\"running_month: 32<br />gi_star:  0.06451562\",\"running_month: 33<br />gi_star:  1.38449460\",\"running_month: 34<br />gi_star:  1.82052471\",\"running_month: 35<br />gi_star:  1.36123444\",\"running_month: 36<br />gi_star:  1.77688274\",\"running_month: 37<br />gi_star:  1.56032791\",\"running_month: 38<br />gi_star:  1.50787033\",\"running_month: 39<br />gi_star:  1.72043754\",\"running_month: 40<br />gi_star:  1.72207948\",\"running_month: 41<br />gi_star:  1.71796979\",\"running_month: 42<br />gi_star:  1.80257248\",\"running_month: 43<br />gi_star:  1.93339907\",\"running_month: 44<br />gi_star:  1.99419310\",\"running_month: 45<br />gi_star:  2.04478671\",\"running_month: 46<br />gi_star:  2.02687833\",\"running_month: 47<br />gi_star:  2.22961786\",\"running_month: 48<br />gi_star:  2.15342185\",\"running_month: 49<br />gi_star:  2.16642616\",\"running_month: 50<br />gi_star:  2.10466157\"],\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.228310502283104,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":37.260273972602747},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-1.4500000000000002,52.450000000000003],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"10\",\"20\",\"30\",\"40\",\"50\"],\"tickvals\":[0,10,20,30,40,50],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"10\",\"20\",\"30\",\"40\",\"50\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"running_month\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-1.0618512667172326,2.581294524536156],\"tickmode\":\"array\",\"ticktext\":[\"-1\",\"0\",\"1\",\"2\"],\"tickvals\":[-1,0,1,2],\"categoryorder\":\"array\",\"categoryarray\":[\"-1\",\"0\",\"1\",\"2\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(179,179,179,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.33208800332088001,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(222,222,222,1)\",\"gridwidth\":0.33208800332088001,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"gi_star\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(179,179,179,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"17582e8c6a6c\":{\"x\":{},\"y\":{},\"type\":\"scatter\"}},\"cur_data\":\"17582e8c6a6c\",\"visdat\":{\"17582e8c6a6c\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nThe Gi\\* plot for Bangkok reveals tourism revenue trends over time. Initially, Bangkok stood as a significant hot spot, with the trend strengthening until around month 10. A slight decline followed, but Bangkok maintained its hot spot status until a sharp downturn around month 15, likely marking the onset of the COVID-19 pandemic. This period saw Bangkok's performance drop to average or below-average levels compared to surrounding areas. The subsequent months were characterized by volatility, with sharp fluctuations possibly reflecting various recovery attempts and pandemic waves. A notable dip around month 25 temporarily turned Bangkok into a cold spot. However, from month 30 onwards, a steady upward trend emerged, indicating Bangkok's gradual recovery. By the end of the period, Bangkok had largely reclaimed its pre-pandemic status as a significant hot spot for tourism revenue.\n\n## Man Kendall Test\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngistars_bkk %>%\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %>% \n  tidyr::unnest_wider(mk)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 5\n     tau    sl     S     D   varS\n   <dbl> <dbl> <dbl> <dbl>  <dbl>\n1 0.0188 0.854    23  1225 14292.\n```\n:::\n:::\n\n\nThis Mann-Kendall test result provides insights into the trend of the Gi\\* statistic for Bangkok over time. The tau value indicates a very weak positive trend, suggesting a slight overall increase in Bangkok's status as a hot spot for tourism revenue. The p-value (represented by 'sl' in the table) of 0.8539923 is much higher than the typical significance threshold of 0.05, indicating that this trend is not statistically significant. In other words, while there's a slight positive trend in Bangkok's tourism performance relative to its neighbors over time, this trend is not strong enough to rule out the possibility that it occurred by chance. This could be because of the period during covid which is part of the observation.\n\n## Emerging hot spot and cold spot\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform Emerging Hot Spot Analysis\nehsa <- emerging_hotspot_analysis(\n  x = tourism_spacetime, \n  .var = \"log_revenue_all\", \n  k = 1, \n  nsim = 99\n)\n\n# Create a bar plot of classifications\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar() +\n  theme_minimal() +\n  labs(title = \"Distribution of EHSA Classifications\",\n       x = \"Classification\",\n       y = \"Count\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Join EHSA results with spatial data\nthailand_ehsa <- thailand_utm %>%\n  left_join(ehsa,\n            by = c(\"ADM1_EN\" = \"location\"))\n\n# Filter for significant results\nehsa_sig <- thailand_ehsa %>%\n  filter(p_value < 0.05)\n\n# Create a map\ntmap_mode(\"plot\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ntmap mode set to plotting\n```\n:::\n\n```{.r .cell-code}\ntm_shape(thailand_ehsa) +\n  tm_polygons(col = \"grey90\", border.col = \"white\") +\n  tm_shape(ehsa_sig) +\n  tm_fill(\"classification\", \n          palette = \"viridis\", \n          title = \"EHSA Classification\") + \n  tm_borders(alpha = 0.4) +\n  tm_layout(main.title = \"Emerging Hot Spots of Tourism Revenue in Thailand\",\n            main.title.position = c(\"center\", \"top\"),\n            main.title.size = 1,\n            legend.outside = TRUE,\n            legend.outside.position = \"right\",\n            frame = FALSE) +\n  tm_compass(type = \"8star\", position = c(\"right\", \"top\")) +\n  tm_scale_bar(position = c(\"left\", \"bottom\"))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-18-2.png){width=672}\n:::\n:::\n\n\nThe overall pattern points to a varied tourism landscape in Thailand:\n\n-   The lack of pattern in many inland areas might indicate a more stable, possibly domestic-oriented tourism sector less affected by international trends.\n\n-   The sporadic nature of both hot and cold spots in various regions highlights the complex and changing nature of Thailand's tourism industry, possibly influenced by factors such as covid.\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\r\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\r\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\r\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\r\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\r\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}