{
  "hash": "8e2e2f9b77ee2515768f5d365ec60db2",
  "result": {
    "markdown": "---\ntitle: \"Take-home Exercise 1\"\nauthor: \"Leow Xian Zu\"\ndate: \"2 Sep 2024\"\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true \n  message: false #no more warning message\n  freeze: true #whatever document already commited does not render\n---\n\n\n# Set up\n\n## Load packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\n  tidyverse,    # for data manipulation and visualization\n  sf,           # for spatial data handling\n  tmap,         # for thematic maps\n  tmaptools,    # additional tools for tmap\n  sfdep,        # for spatial dependence analysis\n  lubridate,    # for date/time manipulation\n  spatstat,     # for point pattern analysis\n  maptools,     # for spatial object manipulation\n  raster,       # for raster data handling\n  sp,           # for spatial data classes and methods\n  leaflet,      # for interactive maps\n  ggplot2,      # for advanced plotting\n  plotly,       # for interactive plots\n  DT,           # for interactive tables\n  knitr,        # for report generation\n  scales,       # for scale functions for visualization\n  viridis,      # for color scales\n  gridExtra,    # for arranging multiple plots\n  OpenStreetMap, # for importing OpenStreetMap data\n  osmdata,      # for working with OpenStreetMap data\n  lwgeom,       # for some advanced geometry operations\n  units\n)\n```\n:::\n\n\ntakehome exercise.\n\nwe are talking about Bangkok metropolitan, which has Bangkok and surrounding areas.\n\nSee Wikipedia, for the provinces forming part of the metropolitan\n\ndownload, then use WGS 83/ UTM zone 27N. EPSG 32647.\n\nNeed to check unit of measurement!!!! See how to convert.\n\ndate time field, needs to take note. indicent date time, peak hours etc\n\nincident datetime, report datetime\n\ndata cleaning.\n\nCheck phone picture for the import read_csv.\n\n## Load files\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, readr, sf, tmap, ggstatsplot)\n\nrdacc_sf <- read_csv(\"C:/zzzzzuu/ISSS626GAA/Take-home_Ex/Take-home_Ex01/data/thai_road_accident_2019_2022.csv\") %>%\n  filter(!is.na(longitude) & longitude != \"\",\n         !is.na(latitude) & latitude != \"\") %>%\n  st_as_sf(coords = c(\n    \"longitude\", \"latitude\"),\n    crs=4326) %>%\n  st_transform(crs = 32647)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 81735 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (10): province_th, province_en, agency, route, vehicle_type, presumed_c...\ndbl   (6): acc_code, number_of_vehicles_involved, number_of_fatalities, numb...\ndttm  (2): incident_datetime, report_datetime\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nroads_sf <- st_read(\"C:/zzzzzuu/ISSS626GAA/Take-home_Ex/Take-home_Ex01/data/hotosm_tha_roads_lines_shp.shp\") %>%\n  st_make_valid() %>%\n  st_set_crs(4326) %>%\n  st_transform(crs = 32647)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `hotosm_tha_roads_lines_shp' from data source \n  `C:\\zzzzzuu\\ISSS626GAA\\Take-home_Ex\\Take-home_Ex01\\data\\hotosm_tha_roads_lines_shp.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2792590 features and 14 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 97.34457 ymin: 5.643645 xmax: 105.6528 ymax: 20.47168\nCRS:           NA\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nadmin_sf <- st_read(\"C:/zzzzzuu/ISSS626GAA/Take-home_Ex/Take-home_Ex01/data/tha_admbndp_admALL_rtsd_itos_20220121.shp\") %>%\n  st_transform(crs = 32647)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `tha_admbndp_admALL_rtsd_itos_20220121' from data source \n  `C:\\zzzzzuu\\ISSS626GAA\\Take-home_Ex\\Take-home_Ex01\\data\\tha_admbndp_admALL_rtsd_itos_20220121.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 7425 features and 23 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 97.49002 ymin: 5.734416 xmax: 105.5628 ymax: 20.43065\nGeodetic CRS:  WGS 84\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check units\nst_crs(rdacc_sf)$units\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"m\"\n```\n:::\n\n```{.r .cell-code}\nst_crs(admin_sf)$units\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"m\"\n```\n:::\n\n```{.r .cell-code}\nst_crs(roads_sf)$units\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"m\"\n```\n:::\n\n```{.r .cell-code}\n# If needed, convert units (e.g., from meters to kilometers)\n#rdacc_sf <- rdacc_sf %>%\n#  mutate(across(where(is.numeric), ~ . / 1000))\n#admin_sf <- admin_sf %>%\n#  mutate(across(where(is.numeric), ~ . / 1000))\n```\n:::\n\n\nNeed to convert accident data from csv to sf\n\nConsider creating folder called sandbox.\n\nas long as it's in data folder, it will not push over.\n\nnetworks have to be in LINESTRING version. not MULTILINE. MULTILINE STRING don't work. If we happen to have that, use SF to break into single line. Pay attention because in openstreetmap it will be multi line string. Will give error message in code.\n\nAnything that detect driver behaviour and physical, create subset. Caused by drink? ruthless driving? Junction? it's in the accident datapoint.\n\nBangkok metropolitan region. The way we use it is to use the names of the provinces in the wiki. Select out all these 6 regions. That will define the area. We have to DIY this.\n\nFilter out from HDX (then write into rds)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}